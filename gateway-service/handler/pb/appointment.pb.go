// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/appointment/appointment.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Appointment struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserFullName         string                 `protobuf:"bytes,3,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	DoctorId             uint32                 `protobuf:"varint,4,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	DoctorName           string                 `protobuf:"bytes,5,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	DoctorSpecialization string                 `protobuf:"bytes,6,opt,name=doctor_specialization,json=doctorSpecialization,proto3" json:"doctor_specialization,omitempty"`
	AppointmentAt        string                 `protobuf:"bytes,7,opt,name=appointment_at,json=appointmentAt,proto3" json:"appointment_at,omitempty"` // ISO8601 string format (RFC3339)
	IsPaid               bool                   `protobuf:"varint,8,opt,name=is_paid,json=isPaid,proto3" json:"is_paid,omitempty"`
	Status               string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            string                 `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string                 `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Appointment) Reset() {
	*x = Appointment{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Appointment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appointment) ProtoMessage() {}

func (x *Appointment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appointment.ProtoReflect.Descriptor instead.
func (*Appointment) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{0}
}

func (x *Appointment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Appointment) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Appointment) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *Appointment) GetDoctorId() uint32 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *Appointment) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *Appointment) GetDoctorSpecialization() string {
	if x != nil {
		return x.DoctorSpecialization
	}
	return ""
}

func (x *Appointment) GetAppointmentAt() string {
	if x != nil {
		return x.AppointmentAt
	}
	return ""
}

func (x *Appointment) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *Appointment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Appointment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Appointment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AppointmentIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppointmentIDRequest) Reset() {
	*x = AppointmentIDRequest{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppointmentIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentIDRequest) ProtoMessage() {}

func (x *AppointmentIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentIDRequest.ProtoReflect.Descriptor instead.
func (*AppointmentIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{1}
}

func (x *AppointmentIDRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UserAppointmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAppointmentsRequest) Reset() {
	*x = UserAppointmentsRequest{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAppointmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAppointmentsRequest) ProtoMessage() {}

func (x *UserAppointmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAppointmentsRequest.ProtoReflect.Descriptor instead.
func (*UserAppointmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{2}
}

func (x *UserAppointmentsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateAppointmentRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	UserId               uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserFullName         string                 `protobuf:"bytes,2,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	DoctorId             uint32                 `protobuf:"varint,3,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	DoctorName           string                 `protobuf:"bytes,4,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	DoctorSpecialization string                 `protobuf:"bytes,5,opt,name=doctor_specialization,json=doctorSpecialization,proto3" json:"doctor_specialization,omitempty"`
	AppointmentAt        string                 `protobuf:"bytes,6,opt,name=appointment_at,json=appointmentAt,proto3" json:"appointment_at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateAppointmentRequest) Reset() {
	*x = CreateAppointmentRequest{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppointmentRequest) ProtoMessage() {}

func (x *CreateAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppointmentRequest.ProtoReflect.Descriptor instead.
func (*CreateAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAppointmentRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateAppointmentRequest) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *CreateAppointmentRequest) GetDoctorId() uint32 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *CreateAppointmentRequest) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *CreateAppointmentRequest) GetDoctorSpecialization() string {
	if x != nil {
		return x.DoctorSpecialization
	}
	return ""
}

func (x *CreateAppointmentRequest) GetAppointmentAt() string {
	if x != nil {
		return x.AppointmentAt
	}
	return ""
}

type UpdateAppointmentRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserFullName         string                 `protobuf:"bytes,3,opt,name=user_full_name,json=userFullName,proto3" json:"user_full_name,omitempty"`
	DoctorId             uint32                 `protobuf:"varint,4,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	DoctorName           string                 `protobuf:"bytes,5,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	DoctorSpecialization string                 `protobuf:"bytes,6,opt,name=doctor_specialization,json=doctorSpecialization,proto3" json:"doctor_specialization,omitempty"`
	AppointmentAt        string                 `protobuf:"bytes,7,opt,name=appointment_at,json=appointmentAt,proto3" json:"appointment_at,omitempty"`
	Status               string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	IsPaid               bool                   `protobuf:"varint,9,opt,name=is_paid,json=isPaid,proto3" json:"is_paid,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UpdateAppointmentRequest) Reset() {
	*x = UpdateAppointmentRequest{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppointmentRequest) ProtoMessage() {}

func (x *UpdateAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppointmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAppointmentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAppointmentRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateAppointmentRequest) GetUserFullName() string {
	if x != nil {
		return x.UserFullName
	}
	return ""
}

func (x *UpdateAppointmentRequest) GetDoctorId() uint32 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *UpdateAppointmentRequest) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *UpdateAppointmentRequest) GetDoctorSpecialization() string {
	if x != nil {
		return x.DoctorSpecialization
	}
	return ""
}

func (x *UpdateAppointmentRequest) GetAppointmentAt() string {
	if x != nil {
		return x.AppointmentAt
	}
	return ""
}

func (x *UpdateAppointmentRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateAppointmentRequest) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

type MarkAsPaidRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsPaidRequest) Reset() {
	*x = MarkAsPaidRequest{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsPaidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsPaidRequest) ProtoMessage() {}

func (x *MarkAsPaidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsPaidRequest.ProtoReflect.Descriptor instead.
func (*MarkAsPaidRequest) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{5}
}

func (x *MarkAsPaidRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AppointmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appointment   *Appointment           `protobuf:"bytes,1,opt,name=appointment,proto3" json:"appointment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppointmentResponse) Reset() {
	*x = AppointmentResponse{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentResponse) ProtoMessage() {}

func (x *AppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentResponse.ProtoReflect.Descriptor instead.
func (*AppointmentResponse) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{6}
}

func (x *AppointmentResponse) GetAppointment() *Appointment {
	if x != nil {
		return x.Appointment
	}
	return nil
}

type AppointmentListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appointments  []*Appointment         `protobuf:"bytes,1,rep,name=appointments,proto3" json:"appointments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppointmentListResponse) Reset() {
	*x = AppointmentListResponse{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppointmentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentListResponse) ProtoMessage() {}

func (x *AppointmentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentListResponse.ProtoReflect.Descriptor instead.
func (*AppointmentListResponse) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{7}
}

func (x *AppointmentListResponse) GetAppointments() []*Appointment {
	if x != nil {
		return x.Appointments
	}
	return nil
}

type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_proto_appointment_appointment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_appointment_appointment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_proto_appointment_appointment_proto_rawDescGZIP(), []int{8}
}

var File_proto_appointment_appointment_proto protoreflect.FileDescriptor

const file_proto_appointment_appointment_proto_rawDesc = "" +
	"\n" +
	"#proto/appointment/appointment.proto\x12\vappointment\"\xe5\x02\n" +
	"\vAppointment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\x12$\n" +
	"\x0euser_full_name\x18\x03 \x01(\tR\fuserFullName\x12\x1b\n" +
	"\tdoctor_id\x18\x04 \x01(\rR\bdoctorId\x12\x1f\n" +
	"\vdoctor_name\x18\x05 \x01(\tR\n" +
	"doctorName\x123\n" +
	"\x15doctor_specialization\x18\x06 \x01(\tR\x14doctorSpecialization\x12%\n" +
	"\x0eappointment_at\x18\a \x01(\tR\rappointmentAt\x12\x17\n" +
	"\ais_paid\x18\b \x01(\bR\x06isPaid\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\v \x01(\tR\tupdatedAt\"&\n" +
	"\x14AppointmentIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"2\n" +
	"\x17UserAppointmentsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"\xf3\x01\n" +
	"\x18CreateAppointmentRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12$\n" +
	"\x0euser_full_name\x18\x02 \x01(\tR\fuserFullName\x12\x1b\n" +
	"\tdoctor_id\x18\x03 \x01(\rR\bdoctorId\x12\x1f\n" +
	"\vdoctor_name\x18\x04 \x01(\tR\n" +
	"doctorName\x123\n" +
	"\x15doctor_specialization\x18\x05 \x01(\tR\x14doctorSpecialization\x12%\n" +
	"\x0eappointment_at\x18\x06 \x01(\tR\rappointmentAt\"\xb4\x02\n" +
	"\x18UpdateAppointmentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\x12$\n" +
	"\x0euser_full_name\x18\x03 \x01(\tR\fuserFullName\x12\x1b\n" +
	"\tdoctor_id\x18\x04 \x01(\rR\bdoctorId\x12\x1f\n" +
	"\vdoctor_name\x18\x05 \x01(\tR\n" +
	"doctorName\x123\n" +
	"\x15doctor_specialization\x18\x06 \x01(\tR\x14doctorSpecialization\x12%\n" +
	"\x0eappointment_at\x18\a \x01(\tR\rappointmentAt\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x17\n" +
	"\ais_paid\x18\t \x01(\bR\x06isPaid\"#\n" +
	"\x11MarkAsPaidRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"Q\n" +
	"\x13AppointmentResponse\x12:\n" +
	"\vappointment\x18\x01 \x01(\v2\x18.appointment.AppointmentR\vappointment\"W\n" +
	"\x17AppointmentListResponse\x12<\n" +
	"\fappointments\x18\x01 \x03(\v2\x18.appointment.AppointmentR\fappointments\"\x0f\n" +
	"\rEmptyResponse2\xe7\x03\n" +
	"\x12AppointmentService\x12Y\n" +
	"\x12GetAppointmentByID\x12!.appointment.AppointmentIDRequest\x1a .appointment.AppointmentResponse\x12e\n" +
	"\x17GetAppointmentsByUserID\x12$.appointment.UserAppointmentsRequest\x1a$.appointment.AppointmentListResponse\x12\\\n" +
	"\x11CreateAppointment\x12%.appointment.CreateAppointmentRequest\x1a .appointment.AppointmentResponse\x12\\\n" +
	"\x11UpdateAppointment\x12%.appointment.UpdateAppointmentRequest\x1a .appointment.AppointmentResponse\x12S\n" +
	"\x15MarkAppointmentAsPaid\x12\x1e.appointment.MarkAsPaidRequest\x1a\x1a.appointment.EmptyResponseB\x13Z\x11appointment/pb;pbb\x06proto3"

var (
	file_proto_appointment_appointment_proto_rawDescOnce sync.Once
	file_proto_appointment_appointment_proto_rawDescData []byte
)

func file_proto_appointment_appointment_proto_rawDescGZIP() []byte {
	file_proto_appointment_appointment_proto_rawDescOnce.Do(func() {
		file_proto_appointment_appointment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_appointment_appointment_proto_rawDesc), len(file_proto_appointment_appointment_proto_rawDesc)))
	})
	return file_proto_appointment_appointment_proto_rawDescData
}

var file_proto_appointment_appointment_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_appointment_appointment_proto_goTypes = []any{
	(*Appointment)(nil),              // 0: appointment.Appointment
	(*AppointmentIDRequest)(nil),     // 1: appointment.AppointmentIDRequest
	(*UserAppointmentsRequest)(nil),  // 2: appointment.UserAppointmentsRequest
	(*CreateAppointmentRequest)(nil), // 3: appointment.CreateAppointmentRequest
	(*UpdateAppointmentRequest)(nil), // 4: appointment.UpdateAppointmentRequest
	(*MarkAsPaidRequest)(nil),        // 5: appointment.MarkAsPaidRequest
	(*AppointmentResponse)(nil),      // 6: appointment.AppointmentResponse
	(*AppointmentListResponse)(nil),  // 7: appointment.AppointmentListResponse
	(*EmptyResponse)(nil),            // 8: appointment.EmptyResponse
}
var file_proto_appointment_appointment_proto_depIdxs = []int32{
	0, // 0: appointment.AppointmentResponse.appointment:type_name -> appointment.Appointment
	0, // 1: appointment.AppointmentListResponse.appointments:type_name -> appointment.Appointment
	1, // 2: appointment.AppointmentService.GetAppointmentByID:input_type -> appointment.AppointmentIDRequest
	2, // 3: appointment.AppointmentService.GetAppointmentsByUserID:input_type -> appointment.UserAppointmentsRequest
	3, // 4: appointment.AppointmentService.CreateAppointment:input_type -> appointment.CreateAppointmentRequest
	4, // 5: appointment.AppointmentService.UpdateAppointment:input_type -> appointment.UpdateAppointmentRequest
	5, // 6: appointment.AppointmentService.MarkAppointmentAsPaid:input_type -> appointment.MarkAsPaidRequest
	6, // 7: appointment.AppointmentService.GetAppointmentByID:output_type -> appointment.AppointmentResponse
	7, // 8: appointment.AppointmentService.GetAppointmentsByUserID:output_type -> appointment.AppointmentListResponse
	6, // 9: appointment.AppointmentService.CreateAppointment:output_type -> appointment.AppointmentResponse
	6, // 10: appointment.AppointmentService.UpdateAppointment:output_type -> appointment.AppointmentResponse
	8, // 11: appointment.AppointmentService.MarkAppointmentAsPaid:output_type -> appointment.EmptyResponse
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_appointment_appointment_proto_init() }
func file_proto_appointment_appointment_proto_init() {
	if File_proto_appointment_appointment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_appointment_appointment_proto_rawDesc), len(file_proto_appointment_appointment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_appointment_appointment_proto_goTypes,
		DependencyIndexes: file_proto_appointment_appointment_proto_depIdxs,
		MessageInfos:      file_proto_appointment_appointment_proto_msgTypes,
	}.Build()
	File_proto_appointment_appointment_proto = out.File
	file_proto_appointment_appointment_proto_goTypes = nil
	file_proto_appointment_appointment_proto_depIdxs = nil
}
