definitions:
  domain.AppointmentModel:
    properties:
      appointment_at:
        description: waktu janji temu
        type: string
      created_at:
        type: string
      doctor_id:
        type: integer
      doctor_name:
        description: snapshot
        type: string
      doctor_specialization:
        description: snapshot
        type: string
      id:
        type: integer
      is_paid:
        description: apakah sudah dibayar
        type: boolean
      status:
        description: paid, unpaid, void/cancel
        type: string
      updated_at:
        type: string
      user_full_name:
        description: snapshot
        type: string
      user_id:
        description: yang booking
        type: integer
    type: object
  domain.QueueModel:
    properties:
      appointment_id:
        description: nullable
        type: integer
      created_at:
        type: string
      doctor_id:
        type: string
      doctor_name:
        type: string
      doctor_specialization:
        type: string
      id:
        type: integer
      patient_id:
        description: optional
        type: string
      patient_name:
        description: optional
        type: string
      queue_number:
        description: di-generate per dokter/hari
        type: integer
      start_from:
        description: estimasi masuk ruangan
        type: string
      status:
        description: active, fail, done
        type: string
      type:
        description: online / offline
        type: string
      updated_at:
        type: string
      user_email:
        description: admin/member
        type: string
      user_id:
        description: user yang create antrian
        type: string
      user_name:
        description: snapshot
        type: string
      user_role:
        description: admin/member
        type: string
    type: object
  dto.GenerateQueueRequest:
    properties:
      appointment_id:
        type: integer
      doctor_id:
        type: string
      doctor_name:
        type: string
      doctor_specialization:
        type: string
      patient_id:
        type: string
      patient_name:
        type: string
      type:
        description: online / offline
        type: string
      user_email:
        type: string
      user_id:
        type: string
      user_name:
        type: string
      user_role:
        type: string
    type: object
info:
  contact: {}
paths:
  /appointments:
    get:
      description: Get a list of all appointments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AppointmentModel'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all appointments
      tags:
      - appointments
    post:
      consumes:
      - application/json
      description: Create a new appointment
      parameters:
      - description: Appointment Data
        in: body
        name: appointment
        required: true
        schema:
          $ref: '#/definitions/domain.AppointmentModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.AppointmentModel'
        "400":
          description: invalid JSON or business rule error
          schema:
            type: string
      summary: Create new appointment
      tags:
      - appointments
  /appointments-by-user/{user_id}:
    get:
      description: Get list of appointments for a specific user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.AppointmentModel'
            type: array
        "400":
          description: invalid user_id
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Get appointments by user ID
      tags:
      - appointments
  /appointments/{id}:
    get:
      description: Get detail of an appointment by its ID
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.AppointmentModel'
        "400":
          description: invalid appointment id
          schema:
            type: string
        "404":
          description: appointment not found
          schema:
            type: string
      summary: Get appointment by ID
      tags:
      - appointments
    patch:
      consumes:
      - application/json
      description: Partially update an appointment (PATCH)
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Fields to update
        in: body
        name: fields
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.AppointmentModel'
        "400":
          description: invalid request
          schema:
            type: string
        "404":
          description: appointment not found
          schema:
            type: string
      summary: Update specific fields of an appointment
      tags:
      - appointments
  /appointments/{id}/mark-paid:
    put:
      description: Update status of an appointment to paid
      parameters:
      - description: Appointment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.AppointmentModel'
        "400":
          description: invalid id or update failed
          schema:
            type: string
        "500":
          description: failed to retrieve updated data
          schema:
            type: string
      summary: Mark appointment as paid
      tags:
      - appointments
  /queues:
    post:
      consumes:
      - application/json
      description: Create a new queue record
      parameters:
      - description: Queue data
        in: body
        name: queue
        required: true
        schema:
          $ref: '#/definitions/domain.QueueModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.QueueModel'
        "400":
          description: invalid JSON or validation error
          schema:
            type: string
      summary: Create a queue
      tags:
      - queues
  /queues-today/{doctor_id}:
    get:
      description: Get all today's queues for a specific doctor
      parameters:
      - description: Doctor ID
        in: path
        name: doctor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.QueueModel'
            type: array
        "400":
          description: invalid doctor_id
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Get today's queues by doctor
      tags:
      - queues
  /queues/{id}:
    get:
      description: Get queue detail by ID
      parameters:
      - description: Queue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.QueueModel'
        "400":
          description: invalid id
          schema:
            type: string
        "404":
          description: queue not found
          schema:
            type: string
      summary: Get queue by ID
      tags:
      - queues
    put:
      consumes:
      - application/json
      description: Update an existing queue by ID
      parameters:
      - description: Queue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated queue data
        in: body
        name: queue
        required: true
        schema:
          $ref: '#/definitions/domain.QueueModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.QueueModel'
        "400":
          description: invalid input
          schema:
            type: string
      summary: Update queue
      tags:
      - queues
  /queues/generate:
    post:
      consumes:
      - application/json
      description: Automatically generate the next queue number for a doctor and create
        a queue
      parameters:
      - description: Queue generation input
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.GenerateQueueRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.QueueModel'
        "400":
          description: invalid request or generation failed
          schema:
            type: string
      summary: Generate next queue number
      tags:
      - queues
swagger: "2.0"
