{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/appointments": {
            "get": {
                "description": "Get a list of all appointments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Get all appointments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.AppointmentModel"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Create new appointment",
                "parameters": [
                    {
                        "description": "Appointment Data",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AppointmentModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AppointmentModel"
                        }
                    },
                    "400": {
                        "description": "invalid JSON or business rule error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointments-by-user/{user_id}": {
            "get": {
                "description": "Get list of appointments for a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Get appointments by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.AppointmentModel"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid user_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointments/{id}": {
            "get": {
                "description": "Get detail of an appointment by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Get appointment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AppointmentModel"
                        }
                    },
                    "400": {
                        "description": "invalid appointment id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "appointment not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update an appointment (PATCH)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Update specific fields of an appointment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "fields",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AppointmentModel"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "appointment not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointments/{id}/mark-paid": {
            "put": {
                "description": "Update status of an appointment to paid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Mark appointment as paid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AppointmentModel"
                        }
                    },
                    "400": {
                        "description": "invalid id or update failed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "failed to retrieve updated data",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queues": {
            "post": {
                "description": "Create a new queue record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Create a queue",
                "parameters": [
                    {
                        "description": "Queue data",
                        "name": "queue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.QueueModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.QueueModel"
                        }
                    },
                    "400": {
                        "description": "invalid JSON or validation error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queues-today/{doctor_id}": {
            "get": {
                "description": "Get all today's queues for a specific doctor",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Get today's queues by doctor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Doctor ID",
                        "name": "doctor_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.QueueModel"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid doctor_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queues/generate": {
            "post": {
                "description": "Automatically generate the next queue number for a doctor and create a queue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Generate next queue number",
                "parameters": [
                    {
                        "description": "Queue generation input",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GenerateQueueRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.QueueModel"
                        }
                    },
                    "400": {
                        "description": "invalid request or generation failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queues/{id}": {
            "get": {
                "description": "Get queue detail by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Get queue by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Queue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.QueueModel"
                        }
                    },
                    "400": {
                        "description": "invalid id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "queue not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing queue by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queues"
                ],
                "summary": "Update queue",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Queue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated queue data",
                        "name": "queue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.QueueModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.QueueModel"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AppointmentModel": {
            "type": "object",
            "properties": {
                "appointment_at": {
                    "description": "waktu janji temu",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "integer"
                },
                "doctor_name": {
                    "description": "snapshot",
                    "type": "string"
                },
                "doctor_specialization": {
                    "description": "snapshot",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_paid": {
                    "description": "apakah sudah dibayar",
                    "type": "boolean"
                },
                "status": {
                    "description": "paid, unpaid, void/cancel",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_full_name": {
                    "description": "snapshot",
                    "type": "string"
                },
                "user_id": {
                    "description": "yang booking",
                    "type": "integer"
                }
            }
        },
        "domain.QueueModel": {
            "type": "object",
            "properties": {
                "appointment_id": {
                    "description": "nullable",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "doctor_name": {
                    "type": "string"
                },
                "doctor_specialization": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "patient_id": {
                    "description": "optional",
                    "type": "string"
                },
                "patient_name": {
                    "description": "optional",
                    "type": "string"
                },
                "queue_number": {
                    "description": "di-generate per dokter/hari",
                    "type": "integer"
                },
                "start_from": {
                    "description": "estimasi masuk ruangan",
                    "type": "string"
                },
                "status": {
                    "description": "active, fail, done",
                    "type": "string"
                },
                "type": {
                    "description": "online / offline",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_email": {
                    "description": "admin/member",
                    "type": "string"
                },
                "user_id": {
                    "description": "user yang create antrian",
                    "type": "string"
                },
                "user_name": {
                    "description": "snapshot",
                    "type": "string"
                },
                "user_role": {
                    "description": "admin/member",
                    "type": "string"
                }
            }
        },
        "dto.GenerateQueueRequest": {
            "type": "object",
            "properties": {
                "appointment_id": {
                    "type": "integer"
                },
                "doctor_id": {
                    "type": "string"
                },
                "doctor_name": {
                    "type": "string"
                },
                "doctor_specialization": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "patient_name": {
                    "type": "string"
                },
                "type": {
                    "description": "online / offline",
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                },
                "user_role": {
                    "type": "string"
                }
            }
        }
    }
}